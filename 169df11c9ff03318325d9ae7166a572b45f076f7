{
  "comments": [
    {
      "key": {
        "uuid": "50d76e7e_8a586bdf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-05T13:56:12Z",
      "side": 1,
      "message": "Don\u0027t we accept int as parameter (yet)?",
      "range": {
        "startLine": 99,
        "startChar": 28,
        "endLine": 99,
        "endChar": 52
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30dafaa9_e9765553",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-05T14:12:26Z",
      "side": 1,
      "message": "Looks lie we do:\n\n  /**\n   * Look up a change by numeric ID.\n   * \u003cp\u003e\n   * \u003cstrong\u003eNote:\u003c/strong\u003e This method eagerly reads the change. Methods that\n   * mutate the change do not necessarily re-read the change. Therefore, calling\n   * a getter method on an instance after calling a mutation method on that same\n   * instance is not guaranteed to reflect the mutation. It is not recommended\n   * to store references to {@code ChangeApi} instances.\n   *\n   * @param id change number.\n   * @return API for accessing the change.\n   * @throws RestApiException if an error occurred.\n   */\n  ChangeApi id(int id) throws RestApiException;\n\nWhy it isn\u0027t used here?",
      "parentUuid": "50d76e7e_8a586bdf",
      "range": {
        "startLine": 99,
        "startChar": 28,
        "endLine": 99,
        "endChar": 52
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30dafaa9_c97b913b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-05-05T14:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30dafaa9_e9765553",
      "range": {
        "startLine": 99,
        "startChar": 28,
        "endLine": 99,
        "endChar": 52
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50d76e7e_ea764753",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-05T13:32:55Z",
      "side": 1,
      "message": "Why is this needed? Is path not set in CommentInfo?",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 105,
        "endChar": 7
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30dafaa9_c940b1f7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-05-05T13:40:41Z",
      "side": 1,
      "message": "Yes, it\u0027s not set, see [1]:\n\n  \"path | optional | ... Not set if returned in a map where the key is the file path.\"\n\n[1] https://gerrit-review.googlesource.com/Documentation/rest-api-changes.html#comment-info",
      "parentUuid": "50d76e7e_ea764753",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 105,
        "endChar": 7
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30dafaa9_2936ad92",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-05-05T13:47:26Z",
      "side": 1,
      "message": "While this makes sense for the REST API (we don\u0027t want to transfer each path twice), RevisionApiImpl should probably set this field so that callers of the API don\u0027t need to worry about this. But the same is true for all kind of Maps that are returned. Would make sense to fix this in the API implementations.",
      "parentUuid": "30dafaa9_c940b1f7",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 105,
        "endChar": 7
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30dafaa9_6930a594",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-05T13:56:12Z",
      "side": 1,
      "message": "+1\n\nThe fact such hacks on the client side are needed, clearly indicated that the API is broken.",
      "parentUuid": "30dafaa9_2936ad92",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 105,
        "endChar": 7
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50d76e7e_4a8833ba",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-05T13:56:12Z",
      "side": 1,
      "message": "Even worth: you (and many other clients) don\u0027t care about map ans normalize them as a list. That smells. The correct implementation of this method should obviously be:\n\n  @Override\n  public Iterable\u003cCommentInfo\u003e getComments(int changeId, String rev)\n      throws IOException, OrmException, BadRequestException {\n  return gApi\n    .changes()\n    .id(changeId)\n    .revision(rev)\n    .commentsAsList();\n  }\n\nEverything else is a hack (and a ugly one).",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 107,
        "endChar": 47
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30dafaa9_a96c5d89",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/importer/LocalApi.java",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-05-05T13:58:24Z",
      "side": 1,
      "message": "+1 would be nice to have a commentsAsList() method in the API.",
      "parentUuid": "50d76e7e_4a8833ba",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 107,
        "endChar": 47
      },
      "revId": "169df11c9ff03318325d9ae7166a572b45f076f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}